name: Cenus Schedules

on:
  schedule:
    # Alerts every 15 minutes
    - cron: "*/15 * * * *"
    # Daily report 09:00 America/Chicago ~= 14:00 UTC during DST
    - cron: "0 14 * * *"
  workflow_dispatch: {}  # allow manual test runs
  push:
    paths:
      - ".github/workflows/cenus.yml"
      - "scripts/**"
      - "src/**"
      - "clients.json"

jobs:
  alerts:
    if: github.event_name == 'workflow_dispatch' || contains(join(fromJson('["*/15 * * * *","0 14 * * *"]'),','), '*/15 * * * *') || github.event.schedule == '*/15 * * * *'
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run alerts (15-min)
        env:
        FB_ACCESS_TOKEN: ${{ secrets.FB_ACCESS_TOKEN }}
        NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
        NOTION_VERSION: ${{ secrets.NOTION_VERSION }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          python scripts/cron_alerts.py

  daily_report:
    if: github.event_name == 'workflow_dispatch' || github.event.schedule == '0 14 * * *'
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run daily report
        env:
        FB_ACCESS_TOKEN: ${{ secrets.FB_ACCESS_TOKEN }}
        NOTION_TOKEN: ${{ secrets.NOTION_TOKEN }}
        NOTION_VERSION: ${{ secrets.NOTION_VERSION }}
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        run: |
          python scripts/cron_daily_report.py
